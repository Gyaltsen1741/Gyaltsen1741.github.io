[
  {
    "objectID": "Mini_Project_4_Text_Analysis.html",
    "href": "Mini_Project_4_Text_Analysis.html",
    "title": "",
    "section": "",
    "text": "Code\n\n\n\n\n\nText Analysis\n\nAuthor: Tenzin Gyaltsen"
  },
  {
    "objectID": "Mini-Project_1_Static_Maps.html",
    "href": "Mini-Project_1_Static_Maps.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source"
  },
  {
    "objectID": "Mini-Project_1_Static_Maps.html#violent-crime-rate-static-map-1999",
    "href": "Mini-Project_1_Static_Maps.html#violent-crime-rate-static-map-1999",
    "title": "",
    "section": "Violent Crime Rate Static Map (1999)",
    "text": "Violent Crime Rate Static Map (1999)\nWhat regions of the U.S. had the highest violent crime rates in 1999?\nThis choropleth map uses color gradients to compare crime rates across all 48 continental states, offering a clear regional overview.\n\nüìò Source title: More Guns, Less Crime?\n\nüîé About this data set: Guns documentation\n\n\n\nHide Code\n# Load necessary libraries\nlibrary(tidyverse)\nlibrary(maps)\nlibrary(ggplot2)\nlibrary(stringr)\nlibrary(readr)\n\n# ----------- Violent Crime Rate Map (1999) -----------\n\n# Load and filter Guns dataset for 1999\nGuns_1999 &lt;- read_csv(\"Guns.csv\") |&gt; \n  filter(year == 1999) |&gt; \n  mutate(state = str_to_lower(str_squish(state)))  # Standardize state names for merging\n\n# Load US state boundary data from the maps package\nstates_polygon &lt;- map_data(\"state\") |&gt; \n  as_tibble() |&gt; \n  rename(State = region)  # Ensure naming consistency for merging\n\n# Check for any unmatched states before merging (Excluding Alaska and Hawaii)\nanti_join(Guns_1999, states_polygon, by = c(\"state\" = \"State\"))  \n\n\n# A tibble: 2 √ó 14\n  rownames  year violent murder robbery prisoners  afam  cauc  male population\n     &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1       46  1999    632.    8.6    91.4       413  8.99  60.6  16.6      0.620\n2      276  1999    235     3.7    88.1       307 24.2   26.1  13.7      1.19 \n# ‚Ñπ 4 more variables: income &lt;dbl&gt;, density &lt;dbl&gt;, state &lt;chr&gt;, law &lt;chr&gt;\n\n\nHide Code\n# Merge violent crime data with state boundaries\ndata_static &lt;- states_polygon |&gt; \n  left_join(Guns_1999, by = c(\"State\" = \"state\"))\n\n# Generate static choropleth map for violent crime rate\nggplot(data_static, aes(x = long, y = lat, group = group, fill = violent)) +\n  geom_polygon(color = \"black\", linewidth = 0.2) +\n  scale_fill_viridis_c(option = \"magma\", name = \"Violent Crime Rate\", direction = -1) +\n  coord_map() + \n  theme_void() +\n  labs(title = \"Violent Crime Rate per 100,000 (1999)\",\n       caption = \"Source: Guns dataset\")\n\n\n\n\n\n\n\n\n\n\nAlt-text:\nThis choropleth map displays the violent crime rate per 100,000 population across U.S. states in 1999. The x-axis represents longitude, and the y-axis represents latitude, outlining the U.S. state boundaries, while the color scale represents crime rates, ranging from light yellow (0-400 per 100,000) to dark purple (1,600+ per 100,000). The highest violent crime rates (dark purple) are concentrated in southern states like South Carolina, Florida and Louisiana, as well as parts of the Southwest like New Mexico. In contrast, the lowest crime rates (light yellow) appear in northern and midwestern states, including North Dakota, Maine, and Vermont. Most states exhibit moderate crime rates (orange to red), with a regional pattern suggesting that violent crime was generally higher in the South and Southwest and lower in the North. This visualization helps compare crime rates geographically, revealing clear regional differences."
  },
  {
    "objectID": "Mini-Project_1_Static_Maps.html#seat-belt-law-enforcement-static-map-1997",
    "href": "Mini-Project_1_Static_Maps.html#seat-belt-law-enforcement-static-map-1997",
    "title": "",
    "section": "Seat Belt Law Enforcement Static Map (1997)",
    "text": "Seat Belt Law Enforcement Static Map (1997)\nHow were seat belt laws enforced across states in 1997? This map highlights state-level differences in law enforcement types and identifies outliers like New Hampshire.\n\nüìò Source title: Effects of Mandatory Seat Belt Laws in the US\n\nüîé About this data set: US SeatBelts documentation\n\n\n\nHide Code\n# ----------- Seat Belt Law Enforcement Map (1997) -----------\n\n# Load and filter seat belt law enforcement data for 1997\nUSSeatBelts_1997 &lt;- read_csv(\"USSeatBelts.csv\") |&gt; \n  filter(year == 1997) |&gt; \n  mutate(state = state.name[match(state, state.abb)],  \n         # Convert state abbreviations to full names\n         state = str_to_lower(str_squish(state))) |&gt;  \n  # Standardize state names for merging\n  drop_na(state)  # Ensure all state names are valid before merging\n\n# Load US state boundary data\nstates_polygon &lt;- map_data(\"state\") |&gt; \n  as_tibble() |&gt; \n  rename(State = region)\n\n# Check for any unmatched states before merging (Excluding Alaska and Hawaii)\nanti_join(USSeatBelts_1997, states_polygon, by = c(\"state\" = \"State\"))  \n\n\n# A tibble: 2 √ó 13\n  rownames state   year miles fatalities seatbelt speed65 speed70 drinkage\n     &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   \n1       15 alaska  1997  4387     0.0176    0.690 yes     no      yes     \n2      180 hawaii  1997  7947     0.0165    0.800 no      no      yes     \n# ‚Ñπ 4 more variables: alcohol &lt;chr&gt;, income &lt;dbl&gt;, age &lt;dbl&gt;, enforce &lt;chr&gt;\n\n\nHide Code\n# Merge seat belt law enforcement data with state boundaries\ndata_static &lt;- states_polygon |&gt; \n  left_join(USSeatBelts_1997, by = c(\"State\" = \"state\")) |&gt; \n  mutate(enforce = replace_na(enforce, \"NA\"))  # Explicitly label missing enforcement data\n\n# Define categorical color mapping for seat belt laws\nenforce_colors &lt;- c(\"no\" = \"yellow\", \n                    \"primary\" = \"blue\", \n                    \"secondary\" = \"red\", \n                    \"NA\" = \"gray\")  # Custom color scheme\n\n# Generate static choropleth map for seat belt law enforcement\nggplot(data_static, aes(x = long, y = lat, group = group, fill = enforce)) +\n  geom_polygon(color = \"black\", linewidth = 0.2) +\n  scale_fill_manual(values = enforce_colors, name = \"Enforcement\", na.value = \"gray\") +\n  coord_map() + \n  theme_void() +\n  labs(title = \"Seat Belt Law Enforcement by State (1997)\",\n       caption = \"Source: USSeatBelts dataset\")\n\n\n\n\n\n\n\n\n\n\nAlt-text:\nThis choropleth map displays seat belt law enforcement classifications across U.S. states in 1997. The x-axis represents longitude, and the y-axis represents latitude, defining U.S. state boundaries, while the color scale represents the type of seat belt law enforcement. The categories include yellow for ‚Äúno enforcement‚Äù, blue for ‚Äúprimary enforcement‚Äù, red for ‚Äúsecondary enforcement‚Äù, and gray for missing data (NA). Most states are red, indicating secondary enforcement, while primary enforcement (blue) is concentrated in a few states, such as Oregon, New Mexico, Texas, and New York. Surprisingly, New Hampshire is the only state with no enforcement (yellow) in this year. The geographic distribution suggests that in 1997, secondary enforcement was the dominant policy, with primary enforcement laws less common and regionally scattered. This map helps visualize the state-level differences in seat belt law enforcement during that year."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "Code\n\n\n\n\n\n\n\n\n\nTenzin Gyaltsen\nEmail Me   GitHub \n\n\nBiology & Chemistry Major Student  Statistics & Data Science Concentration Student  Junior Student @ St.¬†Olaf College\nGet in Touch\nEmail: gyalts2@stolaf.edu  Address: 1500 St.¬†Olaf Ave, Northfield, MN 55057  Phone: 507-581-2962 \n\n\n\n\n\n\n\n\nTenzin Gyaltsen\nPronouns: He/Him \nHome Country: India    Ethnicity: Tibetan   \nHobbies: Love to ride a bike, listen to music and play table-tennis. \nEducation\nBA in Biology, Chemistry, and Statistics & Data Science\nExpected 2026 | St.¬†Olaf College, US\nBilingual International Baccalaureate Diploma\n2022 | UWC Adriatic International High School, Italy\nMiddle School Graduate\n2018 | TCV School Suja, India\n  Source Code"
  },
  {
    "objectID": "courses.html",
    "href": "courses.html",
    "title": "",
    "section": "",
    "text": "Code"
  },
  {
    "objectID": "courses.html#junior-year",
    "href": "courses.html#junior-year",
    "title": "",
    "section": "Junior Year",
    "text": "Junior Year\n\nSpring 2025\n\n\n\nCourse\n\n\nDescription\n\n\n\n\nBIO 242\n\n\nVertebrate Biology\n\n\n\n\nBIO 242\n\n\nVertebrate Biology Lab\n\n\n\n\nBIO 261\n\n\nEcological Principles\n\n\n\n\nBIO 261\n\n\nEcological Principles Lab\n\n\n\n\nPHYS 125\n\n\nPrinciples Physics II\n\n\n\n\nPHYS 125\n\n\nPrinciples Physics II Lab\n\n\n\n\nSDS 264\n\n\nData Science 2\n\n\n\n\n\nJanuary Term 2025\n\n\n\nCourse\n\n\nDescription\n\n\n\n\nCHEM 252\n\n\nOrganometallic Chem\n\n\n\n\n\nFall 2024 to 2025\n\n\n\nCourse\n\n\nDescription\n\n\n\n\nCHEM 255\n\n\nAnalytical Chemistry\n\n\n\n\nCHEM 256\n\n\nAnalytical Lab\n\n\n\n\nID 300\n\n\nOEP Zero-Credit Course\n\n\n\n\nPHYS 124\n\n\nPrinciples Physics I\n\n\n\n\nPHYS 164\n\n\nPrinciples Physics I Lab\n\n\n\n\nSDS 164\n\n\nData Science 1\n\n\n\n\nSDS 272\n\n\nStatistics 2"
  },
  {
    "objectID": "courses.html#sophomore-year",
    "href": "courses.html#sophomore-year",
    "title": "",
    "section": "Sophomore Year",
    "text": "Sophomore Year\n\nSpring 2024\n\n\n\nCourse\n\n\nDescription\n\n\n\n\nBIO 233\n\n\nIntermediate Genetics\n\n\n\n\nBIO 233\n\n\nIntermediate Genetics Lab\n\n\n\n\nCHEM 248\n\n\nOrganic Chemistry II\n\n\n\n\nCHEM 254\n\n\nSynthesis Lab II\n\n\n\n\nPHIL 244\n\n\nPhilosophy of Science\n\n\n\n\nPHIL 258\n\n\nEthics, Economics & the Marketplace\n\n\n\n\n\nJanuary Term 2024\n\n\n\nCourse\n\n\nDescription\n\n\n\n\nPHIL 120\n\n\nPhilosophy in Literature\n\n\n\n\n\nFall 2023 to 2024\n\n\n\nCourse\n\n\nDescription\n\n\n\n\nAS/RE 257\n\n\nBuddhism\n\n\n\n\nBIO 150\n\n\nBiodiversity Foundations\n\n\n\n\nBIO 150\n\n\nBiodiversity Found Lab\n\n\n\n\nCHEM 247\n\n\nOrganic Chemistry I\n\n\n\n\nCHEM 253\n\n\nSynthesis Lab I\n\n\n\n\nPSCI 245\n\n\nAsian Regionalism"
  },
  {
    "objectID": "courses.html#freshman-year",
    "href": "courses.html#freshman-year",
    "title": "",
    "section": "Freshman Year",
    "text": "Freshman Year\n\nSpring 2023\n\n\n\nCourse\n\n\nDescription\n\n\n\n\nCH/BI 227\n\n\nIntegrated Chem/Bio III\n\n\n\n\nCH/BI 227\n\n\nIntegr Chem/Bio III Lab\n\n\n\n\nSOAN 121\n\n\nIntro to Sociology\n\n\n\n\nSTAT 212\n\n\nStatistics for Science\n\n\n\n\nWRIT 120\n\n\nTop: Art, Materiality, Making Asia\n\n\n\n\nWRIT 120\n\n\nSOAR Discussion\n\n\n\n\n\nJanuary Term 2023\n\n\n\nCourse\n\n\nDescription\n\n\n\n\nCH/BI 126\n\n\nIntegrated Chem/Bio II\n\n\n\n\nCH/BI 126\n\n\nIntegrate Chem/Bio II Lab\n\n\n\n\n\nFall 2022 to 2023\n\n\n\nCourse\n\n\nDescription\n\n\n\n\nCH/BI 125\n\n\nIntegrated Chem/Bio I\n\n\n\n\nCH/BI 125\n\n\nIntegrated Chem/Bio I Lab\n\n\n\n\nFYS 120\n\n\nTop: The Making of Modern Science\n\n\n\n\nFYS 120\n\n\nSOAR Discussion\n\n\n\n\nMATH 126\n\n\nCalculus II\n\n\n\n\nPSYCH 125\n\n\nPrinciples: Psych"
  },
  {
    "objectID": "Mini-Project_1_Interactive_Maps.html",
    "href": "Mini-Project_1_Interactive_Maps.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source"
  },
  {
    "objectID": "Mini-Project_1_Interactive_Maps.html#violent-crime-rate-interactive-map-1999",
    "href": "Mini-Project_1_Interactive_Maps.html#violent-crime-rate-interactive-map-1999",
    "title": "",
    "section": "Violent Crime Rate Interactive Map (1999)",
    "text": "Violent Crime Rate Interactive Map (1999)\nExplore how violent crime rates varied across U.S. states in 1999 using this interactive map. Hover over any state to view its crime rate per 100,000 residents.\n\nüìò Source title: More Guns, Less Crime?\n\nüîé About this data set: Guns documentation\n\n\n\nHide Code\n# Load necessary libraries\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(leaflet)\nlibrary(stringr)\nlibrary(readr)\nlibrary(htmltools)\n\n# ----------- Violent Crime Rate Map (1999) -----------\n\n# Load and filter Guns dataset for 1999\nGuns_1999 &lt;- read_csv(\"Guns.csv\") |&gt; \n  filter(year == 1999) |&gt; \n  mutate(state = str_to_lower(str_squish(state)))  # Standardize state names\n\n# Load US states geometry data for interactive mapping\nstates_sf &lt;- read_sf(\"https://rstudio.github.io/leaflet/json/us-states.geojson\") |&gt; \n  select(name, geometry) |&gt; \n  mutate(name = str_to_lower(name))  # Standardize state names\n\n# Merge violent crime data with state geometries\ndata_interactive &lt;- states_sf |&gt; \n  left_join(Guns_1999, by = c(\"name\" = \"state\"))\n\n# Define numeric color scale for violent crime rates\npal_numeric &lt;- colorNumeric(\n  palette = \"magma\", \n  domain = data_interactive$violent, \n  reverse = TRUE,  # Ensures high values are dark, low values are light\n  na.color = \"transparent\"  # Hide missing values instead of coloring them\n)\n\n# Ensure state names are capitalized before using them in tooltips\ndata_interactive &lt;- data_interactive |&gt; \n  mutate(name = str_to_title(name))  # Capitalize state names\n\n# Generate interactive choropleth map for violent crime rates\nleaflet(data_interactive) |&gt; \n  addTiles() |&gt; \n  addPolygons(fillColor = ~pal_numeric(violent),\n              weight = 1, \n              color = \"white\",\n              fillOpacity = 0.7,\n              label = lapply(\n                paste0(\n                  \"&lt;strong&gt;\", data_interactive$name, \"&lt;/strong&gt;&lt;br&gt;\",  # Capitalized state name\n                  \"Violent Crime Rate (1999): &lt;strong&gt;\", data_interactive$violent, \"&lt;/strong&gt; per 100,000\"), HTML),  # Convert text to HTML for proper formatting\n              labelOptions = labelOptions(\n                style = list(\n                  \"font-weight\" = \"normal\", \n                  \"padding\" = \"6px\",\n                  \"background\" = \"rgba(255,255,255,0.8)\",  # Semi-transparent white background\n                  \"border\" = \"1px solid black\",\n                  \"border-radius\" = \"5px\"\n                ),\n                textsize = \"13px\",\n                direction = \"auto\"\n              )) |&gt;\n  addLegend(pal = pal_numeric, \n            values = ~violent, \n            opacity = 0.7, \n            title = \"Violent Crime Rate (1999)\", \n            position = \"bottomright\")\n\n\n\n\n\n\nüìù Insight: States with higher crime rates (darker purple) tend to cluster in the South and Southwest. Many northern states had comparatively lower rates."
  },
  {
    "objectID": "Mini-Project_1_Interactive_Maps.html#seat-belt-law-enforcement-interactive-map-1997",
    "href": "Mini-Project_1_Interactive_Maps.html#seat-belt-law-enforcement-interactive-map-1997",
    "title": "",
    "section": "Seat Belt Law Enforcement Interactive Map (1997)",
    "text": "Seat Belt Law Enforcement Interactive Map (1997)\nThis interactive map shows seat belt law enforcement types in 1997. You can hover over any state to see if they had primary, secondary, or no enforcement at all.\n\nüìò Source title: Effects of Mandatory Seat Belt Laws in the US\n\nüîé About this data set: US SeatBelts documentation\n\n\n\nHide Code\n# ----------- Seat Belt Law Enforcement Map (1997) -----------\n\n# Load and filter seat belt law data for 1997\nUSSeatBelts_1997 &lt;- read_csv(\"USSeatBelts.csv\") |&gt; \n  filter(year == 1997) |&gt; \n  mutate(state = state.name[match(state, state.abb)],  # Convert abbreviations to full names\n         state = str_to_lower(str_squish(state))) |&gt;  # Standardize state names\n  drop_na(state)  # Ensure valid state names only\n\n# Load US states geometry data for interactive mapping\nstates_sf &lt;- read_sf(\"https://rstudio.github.io/leaflet/json/us-states.geojson\") |&gt; \n  select(name, geometry) |&gt; \n  mutate(name = str_to_lower(name))  # Standardize state names\n\n# Merge seat belt law data with state geometries\ndata_interactive &lt;- states_sf |&gt; \n  left_join(USSeatBelts_1997, by = c(\"name\" = \"state\")) |&gt; \n  mutate(enforce = replace_na(enforce, \"NA\"))  # Explicitly label missing enforcement data\n\n# Define categorical color mapping for seat belt laws\npal_categorical &lt;- colorFactor(\n  palette = c(\"gray\", \"yellow\", \"blue\", \"red\"),  # Matches static map color scheme\n  domain = c(\"no\", \"primary\", \"secondary\", \"NA\")\n)\n\n# Ensure state names are capitalized before using them in tooltips\ndata_interactive &lt;- data_interactive |&gt; \n  mutate(name = str_to_title(name))  # Capitalize state names\n\n# Generate interactive choropleth map for seat belt law enforcement\nleaflet(data_interactive) |&gt; \n  addTiles() |&gt; \n  addPolygons(fillColor = ~pal_categorical(enforce),\n              weight = 1, \n              color = \"white\",\n              fillOpacity = 0.7,\n              label = lapply(\n                paste0(\n                  \"&lt;strong&gt;\", data_interactive$name, \"&lt;/strong&gt;&lt;br&gt;\",  # Capitalized state name\n                  \"Seat Belt Enforcement: &lt;strong&gt;\", data_interactive$enforce, \"&lt;/strong&gt;\"), HTML),  # Convert text to HTML for proper formatting\n              labelOptions = labelOptions(\n                style = list(\n                  \"font-weight\" = \"normal\", \n                  \"padding\" = \"6px\",\n                  \"background\" = \"rgba(255,255,255,0.8)\",  # Semi-transparent white background\n                  \"border\" = \"1px solid black\",\n                  \"border-radius\" = \"5px\"\n                ),\n                textsize = \"13px\",\n                direction = \"auto\"\n              )) |&gt;\n  addLegend(pal = pal_categorical, \n            values = ~enforce, \n            opacity = 0.7, \n            title = \"Seat Belt Law Enforcement (1997)\", \n            position = \"bottomright\")\n\n\n\n\n\n\nüìù Insight: Secondary enforcement was the dominant seat belt policy in 1997. Only a few states had adopted primary enforcement, and New Hampshire stood out with no enforcement."
  },
  {
    "objectID": "Mini_Project2.html",
    "href": "Mini_Project2.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source"
  },
  {
    "objectID": "Mini_Project2.html#introduction",
    "href": "Mini_Project2.html#introduction",
    "title": "",
    "section": "Introduction",
    "text": "Introduction\nIn this project, we explored soccer statistics from multiple professional football leagues using data from FBref ‚Äì MLS Stats, a trusted site for advanced football analytics. While we initially focused on Major League Soccer (MLS), we extended our analysis to include other major international competitions such as the Premier League, La Liga, Bundesliga, and Serie A.\nOur goal was to collect and organize standardized squad-level statistics across leagues to support comparative analysis. Specifically, we targeted the ‚ÄúSquad Standard Stats‚Äù tables on each competition‚Äôs main stats page. These tables contain information on team performance metrics such as matches played, goals, assists, average age, possession %, and more."
  },
  {
    "objectID": "Mini_Project2.html#motivation",
    "href": "Mini_Project2.html#motivation",
    "title": "",
    "section": "Motivation",
    "text": "Motivation\nWe chose this dataset primarily out of personal interest: one of us enjoys following global football news, while the other is an avid FC25 player. Beyond our curiosity, we recognized that this data offers a rich opportunity for cross-league comparisons.\nBy scraping the same type of statistics from each league, we aimed to answer questions such as:\n\nDo older squads tend to score more or less?\nIs there a relationship between average age and possession percentage?\nHow does team performance (e.g., goals, assists) vary across leagues?\n\nThese questions open the door for future data visualizations (like scatterplots or heatmaps) and statistical modeling (e.g., regression of goals on age or possession).\nTo acquire the data, we used a custom scraping function along with an iteration technique (pmap) to systematically collect comparable squad stats from each league‚Äôs respective webpage. This ensures consistency while handling slight variations in webpage structure ‚Äî such as differing table positions."
  },
  {
    "objectID": "Mini_Project2.html#scraping-the-squad-standard-stats-table",
    "href": "Mini_Project2.html#scraping-the-squad-standard-stats-table",
    "title": "",
    "section": "Scraping the ‚ÄúSquad Standard Stats‚Äù Table",
    "text": "Scraping the ‚ÄúSquad Standard Stats‚Äù Table\nTo begin, we manually scrape the Major League Soccer (MLS) stats page using rvest. This allows us to locate and inspect the structure of all tables on the page, which helps identify the correct table containing squad-level statistics.\nOnce we confirm the correct table is loaded (in this case, table 5), we clean it by promoting the first row to column headers, standardizing names, and parsing numeric columns. This results in a tidy dataset ready for analysis.\n\n\nHide Code\nlibrary(rvest)\nlibrary(janitor)\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(stringr)\nlibrary(readr)\n\n# Check permissions for the specific stats page\nrobotstxt::paths_allowed(\"https://fbref.com/en/comps/22/Major-League-Soccer-Stats\")\n\n\n[1] TRUE\n\n\nHide Code\n# Step 1: Read the page with rvest\nMLS_table &lt;- read_html(\"https://fbref.com/en/comps/22/Major-League-Soccer-Stats\")\n\n\n\n\nHide Code\n# Step 2: Extract tables from the page\nSquad &lt;- html_nodes(MLS_table, \"table\")\nhtml_table(Squad, header = TRUE, fill = TRUE)  # find right table\n\n\n\n\nHide Code\n# Step 3: Extract the correct table (the fifth table on the page)\nSquad2 &lt;- html_table(Squad, header = TRUE, fill = TRUE)[[5]]\nSquad2\n\n\n# A tibble: 31 √ó 32\n   ``             ``    ``    ``    `Playing Time` `Playing Time` `Playing Time`\n   &lt;chr&gt;          &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;          &lt;chr&gt;          &lt;chr&gt;         \n 1 Squad          # Pl  Age   Poss  MP             Starts         Min           \n 2 Atlanta Utd    23    29.2  52.6  9              99             810           \n 3 Austin         19    28.1  43.9  9              99             810           \n 4 CF Montr√©al    26    24.3  54.1  9              99             810           \n 5 Charlotte      19    29.1  47.6  9              99             810           \n 6 Chicago Fire   23    25.9  48.7  9              99             810           \n 7 Colorado Rapi‚Ä¶ 25    26.4  44.0  9              99             810           \n 8 Columbus Crew  22    26.7  57.9  9              99             810           \n 9 D.C. United    21    26.4  50.8  9              99             810           \n10 FC Cincinnati  23    27.5  50.2  9              99             810           \n# ‚Ñπ 21 more rows\n# ‚Ñπ 25 more variables: `Playing Time` &lt;chr&gt;, Performance &lt;chr&gt;,\n#   Performance &lt;chr&gt;, Performance &lt;chr&gt;, Performance &lt;chr&gt;, Performance &lt;chr&gt;,\n#   Performance &lt;chr&gt;, Performance &lt;chr&gt;, Performance &lt;chr&gt;, Expected &lt;chr&gt;,\n#   Expected &lt;chr&gt;, Expected &lt;chr&gt;, Expected &lt;chr&gt;, Progression &lt;chr&gt;,\n#   Progression &lt;chr&gt;, `Per 90 Minutes` &lt;chr&gt;, `Per 90 Minutes` &lt;chr&gt;,\n#   `Per 90 Minutes` &lt;chr&gt;, `Per 90 Minutes` &lt;chr&gt;, `Per 90 Minutes` &lt;chr&gt;, ‚Ä¶\n\n\nHide Code\n# Step 4: Keep only relevant columns and clean the data\nSquad2_cleaned &lt;- Squad2 |&gt;\n  row_to_names(row_number = 1) |&gt;   # promotes row 1 to column names\n  clean_names() |&gt;                  # make the column names snake_case\n  select(1:16) |&gt;                   # keep only the first 16 columns\n  filter(squad != \"Squad\") |&gt;       # remove header repeats if any\n  mutate(across(2:16, parse_number))# apply parse_number to cols 2‚Äì16\nSquad2_cleaned\n\n\n# A tibble: 30 √ó 16\n   squad  number_pl   age  poss    mp starts   min  x90s   gls   ast   g_a  g_pk\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Atlan‚Ä¶        23  29.2  52.6     9     99   810     9     9     6    15     8\n 2 Austin        19  28.1  43.9     9     99   810     9     7     5    12     7\n 3 CF Mo‚Ä¶        26  24.3  54.1     9     99   810     9     4     3     7     4\n 4 Charl‚Ä¶        19  29.1  47.6     9     99   810     9    15     8    23    13\n 5 Chica‚Ä¶        23  25.9  48.7     9     99   810     9    16    10    26    14\n 6 Color‚Ä¶        25  26.4  44       9     99   810     9    13     8    21    10\n 7 Colum‚Ä¶        22  26.7  57.9     9     99   810     9    11    10    21    11\n 8 D.C. ‚Ä¶        21  26.4  50.8     9     99   810     9    11     9    20    10\n 9 FC Ci‚Ä¶        23  27.5  50.2     9     99   810     9    13     7    20    11\n10 FC Da‚Ä¶        21  27.6  46.8     9     99   810     9    10     6    16    10\n# ‚Ñπ 20 more rows\n# ‚Ñπ 4 more variables: pk &lt;dbl&gt;, p_katt &lt;dbl&gt;, crd_y &lt;dbl&gt;, crd_r &lt;dbl&gt;"
  },
  {
    "objectID": "Mini_Project2.html#creating-a-custom-web-scraping-function",
    "href": "Mini_Project2.html#creating-a-custom-web-scraping-function",
    "title": "",
    "section": "Creating a Custom Web Scraping Function",
    "text": "Creating a Custom Web Scraping Function\nNext, we generalize this scraping process by writing a custom function called scrape_fbref_table(). This function takes in a URL and table number and performs all the cleaning steps automatically. We use it to easily scrape multiple pages later on.\n\n\nHide Code\n# Custom Function\nscrape_fbref_table &lt;- function(url, table_number = 5, n_cols = 16) {\n  page &lt;- read_html(url)\n  tables &lt;- html_nodes(page, \"table\")\n  raw_table &lt;- html_table(tables, fill = TRUE)[[table_number]]\n  \n  cleaned_table &lt;- raw_table |&gt;\n    row_to_names(row_number = 1) |&gt;\n    clean_names() |&gt;\n    select(1:n_cols) |&gt;\n    filter(squad != \"Squad\") |&gt;\n    mutate(across(all_of(2:n_cols), parse_number))\n  \n  return(cleaned_table)\n}\n\nSquad2_cleaned &lt;- scrape_fbref_table(\"https://fbref.com/en/comps/22/Major-League-Soccer-Stats\")\nSquad2_cleaned\n\n\n# A tibble: 30 √ó 16\n   squad  number_pl   age  poss    mp starts   min  x90s   gls   ast   g_a  g_pk\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Atlan‚Ä¶        23  29.2  52.6     9     99   810     9     9     6    15     8\n 2 Austin        19  28.1  43.9     9     99   810     9     7     5    12     7\n 3 CF Mo‚Ä¶        26  24.3  54.1     9     99   810     9     4     3     7     4\n 4 Charl‚Ä¶        19  29.1  47.6     9     99   810     9    15     8    23    13\n 5 Chica‚Ä¶        23  25.9  48.7     9     99   810     9    16    10    26    14\n 6 Color‚Ä¶        25  26.4  44       9     99   810     9    13     8    21    10\n 7 Colum‚Ä¶        22  26.7  57.9     9     99   810     9    11    10    21    11\n 8 D.C. ‚Ä¶        21  26.4  50.8     9     99   810     9    11     9    20    10\n 9 FC Ci‚Ä¶        23  27.5  50.2     9     99   810     9    13     7    20    11\n10 FC Da‚Ä¶        21  27.6  46.8     9     99   810     9    10     6    16    10\n# ‚Ñπ 20 more rows\n# ‚Ñπ 4 more variables: pk &lt;dbl&gt;, p_katt &lt;dbl&gt;, crd_y &lt;dbl&gt;, crd_r &lt;dbl&gt;"
  },
  {
    "objectID": "Mini_Project2.html#iterating-over-multiple-competitions",
    "href": "Mini_Project2.html#iterating-over-multiple-competitions",
    "title": "",
    "section": "Iterating Over Multiple Competitions",
    "text": "Iterating Over Multiple Competitions\nWe used purrr::pmap() to iterate over multiple variables ‚Äî specifically, league URLs, the table numbers containing the ‚ÄúSquad Standard Stats‚Äù table for each competition, and the league names. This allowed us to apply our custom scraping function across multiple soccer leagues, each with its own unique webpage and table structure. This approach demonstrates how iteration over multiple inputs can automate the data collection process across structured but inconsistent sources.\n\n\nHide Code\n# Step 1: Define league names, URLs, and their specific table numbers\nleagues &lt;- tibble::tibble(\n  league = c(\"MLS\", \"Premier_League\", \"La_Liga\", \"Bundesliga\", \"Serie_A\"),\n  url = c(\n    \"https://fbref.com/en/comps/22/Major-League-Soccer-Stats\",\n    \"https://fbref.com/en/comps/9/Premier-League-Stats\",\n    \"https://fbref.com/en/comps/12/La-Liga-Stats\",\n    \"https://fbref.com/en/comps/20/Bundesliga-Stats\",\n    \"https://fbref.com/en/comps/11/Serie-A-Stats\"\n  ),\n  table_number = c(5, 3, 3, 3, 3)  # Specify table index for each league\n)\n\n# Step 2: Scrape each league using map3 to pass 3 arguments\nleague_tables &lt;- pmap(\n  list(leagues$url, leagues$table_number, leagues$league),\n  function(url, table_num, league_name) {\n    scrape_fbref_table(url, table_number = table_num) |&gt; \n      mutate(league = league_name)  # Optionally tag league in each table\n  }\n)\n\n# Step 3: Name each list entry by league\nnames(league_tables) &lt;- leagues$league\n\n# Now each league table is separate and named:\nleague_tables$MLS\n\n\n# A tibble: 30 √ó 17\n   squad  number_pl   age  poss    mp starts   min  x90s   gls   ast   g_a  g_pk\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Atlan‚Ä¶        23  29.2  52.6     9     99   810     9     9     6    15     8\n 2 Austin        19  28.1  43.9     9     99   810     9     7     5    12     7\n 3 CF Mo‚Ä¶        26  24.3  54.1     9     99   810     9     4     3     7     4\n 4 Charl‚Ä¶        19  29.1  47.6     9     99   810     9    15     8    23    13\n 5 Chica‚Ä¶        23  25.9  48.7     9     99   810     9    16    10    26    14\n 6 Color‚Ä¶        25  26.4  44       9     99   810     9    13     8    21    10\n 7 Colum‚Ä¶        22  26.7  57.9     9     99   810     9    11    10    21    11\n 8 D.C. ‚Ä¶        21  26.4  50.8     9     99   810     9    11     9    20    10\n 9 FC Ci‚Ä¶        23  27.5  50.2     9     99   810     9    13     7    20    11\n10 FC Da‚Ä¶        21  27.6  46.8     9     99   810     9    10     6    16    10\n# ‚Ñπ 20 more rows\n# ‚Ñπ 5 more variables: pk &lt;dbl&gt;, p_katt &lt;dbl&gt;, crd_y &lt;dbl&gt;, crd_r &lt;dbl&gt;,\n#   league &lt;chr&gt;\n\n\nHide Code\nleague_tables$Premier_League\n\n\n# A tibble: 20 √ó 17\n   squad  number_pl   age  poss    mp starts   min  x90s   gls   ast   g_a  g_pk\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Arsen‚Ä¶        25  26.6  56.8    33    363  2970    33    59    48   107    57\n 2 Aston‚Ä¶        28  27.8  51.4    33    363  2970    33    51    41    92    49\n 3 Bourn‚Ä¶        29  25.8  48      33    363  2970    33    51    37    88    45\n 4 Brent‚Ä¶        28  26.6  47.7    33    363  2970    33    56    37    93    51\n 5 Brigh‚Ä¶        31  25.6  52.5    33    363  2970    33    51    33    84    46\n 6 Chels‚Ä¶        29  24.4  58.4    33    363  2970    33    56    43    99    53\n 7 Cryst‚Ä¶        29  26.9  43.3    33    363  2970    33    39    31    70    37\n 8 Evert‚Ä¶        26  28.8  40.3    33    363  2970    33    31    20    51    29\n 9 Fulham        26  28.7  51.9    33    363  2970    33    47    40    87    44\n10 Ipswi‚Ä¶        32  26.5  40.5    33    363  2970    33    32    24    56    30\n11 Leice‚Ä¶        30  27.3  45.5    33    363  2970    33    27    21    48    25\n12 Liver‚Ä¶        24  27.9  57.7    33    363  2970    33    75    56   131    66\n13 Manch‚Ä¶        29  27.5  61.4    33    363  2970    33    63    46   109    61\n14 Manch‚Ä¶        31  26.3  53      33    363  2970    33    36    24    60    33\n15 Newca‚Ä¶        24  28.1  50.3    33    363  2970    33    60    46   106    57\n16 Nott'‚Ä¶        23  26.9  40.1    32    352  2880    32    50    36    86    47\n17 South‚Ä¶        35  26    49.8    33    363  2970    33    23    14    37    23\n18 Totte‚Ä¶        31  25.9  56.6    32    352  2880    32    57    44   101    55\n19 West ‚Ä¶        27  28.8  47.7    33    363  2970    33    34    21    55    31\n20 Wolves        30  27.6  47.3    33    363  2970    33    47    36    83    47\n# ‚Ñπ 5 more variables: pk &lt;dbl&gt;, p_katt &lt;dbl&gt;, crd_y &lt;dbl&gt;, crd_r &lt;dbl&gt;,\n#   league &lt;chr&gt;\n\n\nHide Code\nleague_tables$La_Liga\n\n\n# A tibble: 20 √ó 17\n   squad  number_pl   age  poss    mp starts   min  x90s   gls   ast   g_a  g_pk\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Alav√©s        29  27.3  45.9    32    352  2880    32    34    19    53    28\n 2 Athle‚Ä¶        30  27.5  48.6    32    352  2880    32    49    38    87    46\n 3 Atl√©t‚Ä¶        24  29.1  52.1    32    352  2880    32    53    39    92    47\n 4 Barce‚Ä¶        27  25.5  67.4    32    352  2880    32    85    62   147    79\n 5 Betis         35  28.2  52      31    341  2790    31    40    24    64    34\n 6 Celta‚Ä¶        30  27.7  53.6    32    352  2880    32    46    33    79    40\n 7 Espan‚Ä¶        26  26    39.1    31    341  2790    31    32    23    55    28\n 8 Getafe        30  28.4  42.8    32    352  2880    32    31    18    49    26\n 9 Girona        29  28.1  57      31    341  2790    31    37    27    64    33\n10 Las P‚Ä¶        30  27.7  50      32    352  2880    32    36    26    62    34\n11 Legan‚Ä¶        26  28.6  42.1    32    352  2880    32    29    21    50    24\n12 Mallo‚Ä¶        28  29.5  46.8    32    352  2880    32    30    21    51    26\n13 Osasu‚Ä¶        25  28.2  45.7    32    352  2880    32    37    21    58    29\n14 Rayo ‚Ä¶        26  29.9  51.3    32    352  2880    32    32    24    56    32\n15 Real ‚Ä¶        27  27.6  60.8    32    352  2880    32    65    45   110    56\n16 Real ‚Ä¶        31  26    54.1    32    352  2880    32    31    20    51    28\n17 Sevil‚Ä¶        34  26.8  51.2    32    352  2880    32    32    27    59    31\n18 Valen‚Ä¶        32  25.4  46.9    32    352  2880    32    36    24    60    33\n19 Valla‚Ä¶        35  26.4  43.6    32    352  2880    32    23    12    35    18\n20 Villa‚Ä¶        30  27.6  48.9    31    341  2790    31    53    36    89    48\n# ‚Ñπ 5 more variables: pk &lt;dbl&gt;, p_katt &lt;dbl&gt;, crd_y &lt;dbl&gt;, crd_r &lt;dbl&gt;,\n#   league &lt;chr&gt;\n\n\nHide Code\nleague_tables$Bundesliga\n\n\n# A tibble: 18 √ó 17\n   squad  number_pl   age  poss    mp starts   min  x90s   gls   ast   g_a  g_pk\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Augsb‚Ä¶        29  27.6  43.2    30    330  2700    30    33    25    58    32\n 2 Bayer‚Ä¶        28  28.4  68.6    30    330  2700    30    84    56   140    75\n 3 Bochum        26  28.8  44.6    30    330  2700    30    28    21    49    27\n 4 Dortm‚Ä¶        28  27.3  59.2    30    330  2700    30    55    44    99    51\n 5 Eint ‚Ä¶        26  25.6  49.9    30    330  2700    30    58    38    96    55\n 6 Freib‚Ä¶        26  28    49      30    330  2700    30    41    32    73    41\n 7 Gladb‚Ä¶        26  27.3  49.5    30    330  2700    30    46    33    79    42\n 8 Heide‚Ä¶        26  27.6  43.3    30    330  2700    30    32    21    53    27\n 9 Hoffe‚Ä¶        34  27.2  49.4    30    330  2700    30    38    22    60    35\n10 Holst‚Ä¶        27  26.3  44.3    30    330  2700    30    41    25    66    38\n11 Lever‚Ä¶        23  27.8  59.3    30    330  2700    30    62    47   109    60\n12 Mainz‚Ä¶        24  28.2  50.1    30    330  2700    30    46    33    79    43\n13 RB Le‚Ä¶        29  26.3  53      30    330  2700    30    46    32    78    43\n14 St. P‚Ä¶        27  27.7  44.6    30    330  2700    30    24    20    44    23\n15 Stutt‚Ä¶        28  25.6  56.2    30    330  2700    30    53    40    93    51\n16 Union‚Ä¶        28  27.9  39.9    30    330  2700    30    31    22    53    28\n17 Werde‚Ä¶        23  28.3  49.5    30    330  2700    30    47    35    82    45\n18 Wolfs‚Ä¶        27  25.9  46      30    330  2700    30    51    36    87    47\n# ‚Ñπ 5 more variables: pk &lt;dbl&gt;, p_katt &lt;dbl&gt;, crd_y &lt;dbl&gt;, crd_r &lt;dbl&gt;,\n#   league &lt;chr&gt;\n\n\nHide Code\nleague_tables$Serie_A\n\n\n# A tibble: 20 √ó 17\n   squad  number_pl   age  poss    mp starts   min  x90s   gls   ast   g_a  g_pk\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Atala‚Ä¶        32  27.9  55.2    33    363  2970    33    64    45   109    60\n 2 Bolog‚Ä¶        30  27    57.8    33    363  2970    33    51    38    89    45\n 3 Cagli‚Ä¶        26  27.4  45.4    32    352  2880    32    30    24    54    27\n 4 Como          38  27    54.3    33    363  2970    33    38    33    71    38\n 5 Empoli        34  26.2  41      33    363  2970    33    25    16    41    23\n 6 Fiore‚Ä¶        34  27    49.5    32    352  2880    32    47    31    78    41\n 7 Genoa         34  27.1  46      32    352  2880    32    28    21    49    28\n 8 Hella‚Ä¶        32  25.8  38.5    33    363  2970    33    27    17    44    25\n 9 Inter         25  30.2  59.3    33    363  2970    33    69    53   122    63\n10 Juven‚Ä¶        29  25.4  58.6    32    352  2880    32    47    32    79    42\n11 Lazio         27  27.9  53.9    32    352  2880    32    52    38    90    47\n12 Lecce         31  26.8  44.6    33    363  2970    33    23    18    41    21\n13 Milan         34  26.4  54.2    33    363  2970    33    50    36    86    46\n14 Monza         35  27.6  47.7    33    363  2970    33    24    16    40    21\n15 Napoli        27  29.3  53.5    33    363  2970    33    49    36    85    45\n16 Parma         32  24.6  45.2    32    352  2880    32    36    26    62    30\n17 Roma          28  27.3  55.3    33    363  2970    33    47    29    76    40\n18 Torino        28  27.5  47.5    32    352  2880    32    33    21    54    32\n19 Udine‚Ä¶        30  27.1  47.3    32    352  2880    32    36    24    60    34\n20 Venez‚Ä¶        36  26.1  44.9    33    363  2970    33    26    13    39    22\n# ‚Ñπ 5 more variables: pk &lt;dbl&gt;, p_katt &lt;dbl&gt;, crd_y &lt;dbl&gt;, crd_r &lt;dbl&gt;,\n#   league &lt;chr&gt;\n\n\nWe kept the league tables separate to maintain flexibility in our analysis. This structure allows future us to explore each league individually or easily join the datasets later if a combined analysis across leagues becomes relevant."
  }
]